<project name="Grapher"
         default="compile"
         basedir="../run">

  <description>
    Grapher
    </description>

  <!-- Setup ================================================================-->

  <property environment="env"/>
  <property file="../ant/build-global.properties"/>
  <property file="../ant/build-local.properties"/>

  <path id="classpath.build">
    <fileset dir="../extlib">
      <include name="*.jar"/>
      </fileset>
    <fileset dir="../extlib/import">
      <include name="*.jar"/>
      </fileset>
    <fileset dir="${groovy_dir}/lib">
      <include name="*.jar"/>
      </fileset>
    </path>

  <path id="classpath.groovy">
    <fileset dir="${groovy_dir}/lib" includes="*.jar" excludes="groovy-ant-*.jar"/>
    </path>    

  <path id="umlDoclet.classpath">
    <pathelement path="../extlib/umldoclet-2.1.1.jar"/>
    </path>

  <path id="classpath.run">
    <path refid="classpath.build"/>
    </path>
    
  <property name="classpath.build.content"       refid="classpath.build"/>
  <property name="classpath.run.content"         refid="classpath.run"/>
  <taskdef name="groovy"
           classname="org.codehaus.groovy.ant.Groovy"> 
    <classpath>
      <fileset file="${groovy_jar}"/>
      <fileset file="${groovy_ant_jar}"/>
      </classpath>
    </taskdef>

  <taskdef name="groovyc"
           classname="org.codehaus.groovy.ant.Groovyc">
    <classpath>
      <fileset file="${groovy_jar}"/>
      <fileset file="${groovy_ant_jar}"/>
      </classpath>
    </taskdef>
    
  <taskdef name="groovydoc"
         classname= "org.codehaus.groovy.ant.Groovydoc">
    <classpath>
      <fileset dir="${groovy_dir}/lib" includes="*.jar"/>
      </classpath>
    </taskdef>

  <taskdef resource="edu/umd/cs/findbugs/anttask/tasks.properties"
           classpath="${spotbugs}/lib/spotbugs-ant.jar" />

  <!-- Info =================================================================-->
    
  <target name="info"
          depends="init"
          description="Create Info class">
    <mkdir dir="../build/com/Grapher/Utils"/>
    <copy file="../src/java/com/Grapher/Utils/Info.pre"
          tofile="../build/com/Grapher/Utils/Info.java"/>
    <replace file="../build/com/Grapher/Utils/Info.java" token="@version@"     value="${version}"/>
    <replace file="../build/com/Grapher/Utils/Info.java" token="@user.name@"   value="${user.name}"/>
    <replace file="../build/com/Grapher/Utils/Info.java" token="@TSTAMP@"      value="${TSTAMP}"/>
    </target>

  <!-- Init =================================================================-->

  <target name="init"
          description="Initialise environment">
    <tstamp>
      <format property="TSTAMP" pattern="dd/MMM/yyyy 'at' kk:mm:ss z"/>
      </tstamp>
    <mkdir dir="../build"/>
    <mkdir dir="../lib"/>
    <mkdir dir="../extlib"/>
    <mkdir dir="../extlib/import"/>
    <mkdir dir="../run"/>
    <mkdir dir="../dist"/>
    <mkdir dir="../doc/JavaDoc"/>
    <copy todir="../extlib/import">
			<fileset file="${lomikel_jar}"/>
			<fileset file="${jython_jar}"/>
			<fileset file="${log4j_core_jar}"/>
			<fileset file="${log4j_api_jar}"/>
			<fileset file="${cli_jar}"/>
      <fileset file="${antlr4_runtime_jar}"/>
      <fileset file="${lang3_jar}"/>
      <fileset file="${math3_jar}"/>
      <fileset file="${text_jar}"/>
      <fileset file="${dsiutils_jar}"/>
      <fileset file="${fastutil_jar}"/>
      <fileset file="${guava_jar}"/>
      <fileset file="${jgrapht_core_jar}"/>
      <fileset file="${jgrapht_ext_jar}"/>
      <fileset file="${jgrapht_guava_jar}"/>
      <fileset file="${jgrapht_io_jar}"/>
      <fileset file="${jgrapht_opt_jar}"/>
      <fileset file="${jgrapht_unimi_dsi_jar}"/>
      <fileset file="${jgraphx_jar}"/>
      <fileset file="${jheaps_jar}"/>
      <fileset file="${jsap_jar}"/>
      <fileset file="${logback_classic_jar}"/>
      <fileset file="${logback_core_jar}"/>
      <fileset file="${slf4j_api_jar}"/>
      <fileset file="${sux4j_jar}"/>
      <fileset file="${webgraph_jar}"/>
      <fileset file="${webgraph_jar}"/>
      <fileset file="${jgraphx_jar}"/>
      </copy>
    </target>

  <!-- Compile ==============================================================-->

  <target name="compile"
          depends="init,info"
          description="Compile sources">
    <echo message="Using Java version ${ant.java.version}(${java.version})."/>
    <javac destdir="../build"
           fork="yes"
           debug="yes"
           debuglevel="lines,vars,source"
           optimize="yes"
           source="11"
           target="11">
      <src path="../src/java"/>
      <src path="../build"/>
      <classpath>
        <path refid="classpath.build"/>
        </classpath>
      </javac>
    </target>

  <target name="compile-groovy"
          depends="init"
          description="Compile groovy sources">
    <groovyc srcdir="../src/groovy"
             destdir="../build"
             classpathref="classpath.groovy"
             fork="true"
             includeantruntime="false"
             configscript="../src/groovy/config.groovy"
             targetBytecode="${env.java_version}"> 
      <classpath>
        <path refid="classpath.build"/>
        <pathelement path="../build"/>
        </classpath>
      </groovyc>
    </target>
        
  <!-- Compile Native =======================================================-->
    
  <target name="compile-native"
          depends="jar"
          description="Compile into native application">
    <exec executable="${graalvm_dir}/bin/native-image">
      <arg value="--initialize-at-build-time=org.apache.log4j.Level,org.apache.log4j.Logger,org.apache.log4j.helpers.LogLog,org.apache.log4j.Priority,org.apache.log4j.LogManager,org.apache.log4j.helpers.Loader,org.apache.log4j.Category,org.apache.log4j.spi.RootLogger,org.apache.log4j.spi.LoggingEvent,org.slf4j.LoggerFactory,org.slf4j.impl.Log4jLoggerAdapter,org.slf4j.impl.Log4jLoggerFactory,org.slf4j.impl.StaticLoggerBinder"/>
      <arg value="-H:Name=Grapher.exe"/>
      <arg value="-H:Path=../bin"/>
      <arg value="-jar"/>
      <arg value="../lib/Grapher.exe.jar"/>
      </exec>
    </target>
    
  <!-- Create JAR ===========================================================-->
  
  <target name="jar"
          depends="compile,compile-groovy"
          description="Create JAR">
    <path id="libs">
      <fileset dir="../extlib">
        <include name="*.jar"/>
        <exclude name="*.exe.jar"/>
        </fileset>
      </path>
    <property name="classpath.libs" refid="libs"/>
    <jar jarfile="../lib/Grapher-${version}.jar" index="yes">
      <fileset dir="../build"    includes="**/*.class"/>
      <fileset dir="../src/java" includes="**/*.properties"/>
      <fileset dir="../src/java" includes="**/*.xml"/>
      <fileset dir="../src/java" includes="**/*.bsh"/>
      <fileset dir="../src/java" includes="**/*.txt"/>
      <fileset dir="../src/java" includes="**/*.png"/>
      <fileset dir="../src/java" includes="**/*.gif"/>
      <fileset dir="../src/java" includes="**/*.css"/>
     <manifest>
        <attribute name="Created-By" value="${user.name}"/>
        <attribute name="AppName"    value="Grapher"/>
        <attribute name="AppVersion" value="${version} ${TSTAMP}"/>
        </manifest>
      </jar>
    </target>
      
  <target name="exe"
          depends="jar"
          description="Create exe JARs">
    <jar jarfile="../lib/Grapher-${version}.exe.jar" index="yes">
      <zipfileset includes="**/*" src="../lib/Grapher-${version}.jar"/>
      <zipfileset includes="**/*" src="${lomikel_jar}"/>
      <zipfileset includes="**/*" src="${lomikel_ext_jar}"/>
      <zipfileset includes="**/*" src="${jgrapht_core_jar}"/>
      <zipfileset includes="**/*" src="${jgrapht_io_jar}"/>
      <zipfileset includes="**/*" src="${jgrapht_ext_jar}"/>
      <zipfileset includes="**/*" src="${jgraphx_jar}"/>
      <zipfileset includes="**/*" src="${text_jar}"/>
      <zipfileset includes="**/*" src="${lang3_jar}"/>
      <zipfileset includes="**/*" src="${jheaps_jar}"/>
      <manifest>
        <attribute name="Created-By" value="${user.name}"/>
        <attribute name="AppName"    value="Grapher"/>
        <attribute name="AppVersion" value="${version} ${TSTAMP}"/>
        <!--attribute name="Main-Class" value="com.Grapher.Tests.HelloJGraphT"/-->
        <!--attribute name="Main-Class" value="com.Grapher.Tests.HelloJGraphX"/-->
        <!--attribute name="Main-Class" value="com.Grapher.Apps.CLI"/-->
        <attribute name="Main-Class" value="com.Lomikel.Apps.LUC"/>
        </manifest>
      </jar>
    </target>
    
    
  <!-- Clean ================================================================-->

  <target name="clean"
          depends="init"
          description="Clean up">
    <delete includeEmptyDirs="true">
      <fileset dir="../build" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../lib" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../doc" includes="**/*"/>
      </delete>
    <delete includeEmptyDirs="true">
      <fileset dir="../dist" includes="**/*"/>
      </delete>
    <!--delete includeEmptyDirs="true">
      <fileset dir="../extlib/import" includes="**/*"/>
      </delete-->
    <delete includeEmptyDirs="true">
      <fileset dir="." includes="**/*"/>
      </delete>
   </target>
   
  <!-- Dist =================================================================-->

  <target name="dist"
          depends="jar"
          description="Construct distribution">
    <copy todir="../dist">
			<fileset dir="../lib" includes="*.jar"/>
      </copy>
  </target>
  
  <!-- JavaDoc ==============================================================-->

  <target name="doc"
          depends="exe,j2h,viz,gdoc"
          description="Construct documentation">
 		<copy todir="../doc">
			<fileset dir="../src" includes="*.html"/>
			<fileset dir="../src" includes="*.jpeg"/>
 			<fileset dir="../src" includes="*.jpg"/>
     </copy>
 		<copy todir="../doc/JavaDoc">
			<fileset dir="../src/java" includes="**/doc-files/*"/>
      </copy>
    <javadoc packagenames="*"
             doclet="org.jboss.apiviz.APIviz"
             docletpath="../extlib/apiviz-1.3.4.jar:../extlib/jdepend-2.9.5.jar:../extlib/tools-1.8.0.jar"
             sourcepath="../src/java:../build"
             destdir="../doc/JavaDoc"
             author="true"
             version="true"
             use="true"
             private="true"
             additionalparam=" -linksource -breakiterator -keywords -author -version"
             source="1.8"
             Overview="../src/java/com/Grapher/overview.html"
             windowtitle="Grapher">
      <doclet name="nl.talsmasoftware.umldoclet.UMLDoclet" pathref="umlDoclet.classpath">
        <!--param name="additionalParamName" value="additionalParamValue"/-->
        </doclet>
      <doctitle><![CDATA[<u>]]>Grapher<![CDATA[</u>]]></doctitle>
      <Header><![CDATA[<center>]]>Grapher version: ${version}<![CDATA[</center>]]></Header>
      <Footer><![CDATA[<center>Written by: <a href='http://cern.ch/hrivnac'>J.Hrivnac</a></center>]]></Footer>
      <bottom><![CDATA[<a href='https://cern.ch/hrivnac/Activities/Packages/Grapher'>Documentation</a>]]> built ${TODAY} on ${os.name} by ${user.name}</bottom>
      <group title="Convertors"          packages="com.Grapher.Convertors*"/>
      <group title="GUI"                 packages="com.Grapher.GUI*"/>
      <group title="Analysis"            packages="com.Grapher.Analysis*"/>
      <group title="Analysis Algorithms" packages="com.Grapher.Analysis.Algorithms*"/>
      <group title="Utils"               packages="com.Grapher.Utils*"/>
      <group title="Tests"               packages="com.Grapher.Tests*"/>
      <link href="http://docs.oracle.com/javase/11/docs/api"/>
      <link href="http://docs.groovy-lang.org/latest/html/api"/>
      <link href="https://commons.apache.org/proper/commons-cli/apidocs"/>
      <link href="https://logging.apache.org/log4j/1.2/apidocs"/>
      <link href="https://jgrapht.org/javadoc"/>
      <classpath>
        <path refid="classpath.run"/>
        </classpath>
      </javadoc>
    <replace file="../doc/index.html" token="@VERSION@" value="${version}"/>
    <replace file="../doc/index.html" token="@BUILD@"   value="${TSTAMP} by ${user.name}"/>
  </target>
    
  <!-- GroovyDoc ============================================================-->

  <target name="gdoc"
          depends="init"
          description="Construct Groovy documentation">
    <groovydoc destdir="../doc/GroovyDoc"
             sourcepath="../src/groovy"
             packagenames="com.Grapher.*"
             use="true"
             windowtitle="Grapher"
             doctitle="&lt;u&gt;Grapher&lt;/u&gt;"
             header="&lt;center&gt;Grapher version: ${version}&lt;/center&gt;"
             footer="Written by: &lt;a href='http://cern.ch/hrivnac'&gt;J.Hrivnac&lt;/a&gt;&lt;br/&gt;&lt;a href='https://cern.ch/hrivnac/Activities/Packages/Grapher'&gt;Documentation&lt;/a&gt; built ${TODAY} on ${os.name} by ${user.name}"
             overview="../src/groovy/com/Grapher/overview.html"
             private="true">
      <link href="http://docs.oracle.com/javase/11/docs/api"/>
      <link href="http://docs.groovy-lang.org/latest/html/api"/>
      <link href="http://www.beanshell.org/javadoc/"/>
      <link packages="org.apache.logging.log4j." href="https://logging.apache.org/log4j/1.2/apidocs"/>
      <link href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs"/>
      <link href="http://stleary.github.io/JSON-java"/>
      <link href="https://commons.apache.org/proper/commons-cli/apidocs"/>
      <link href="https://javadoc.io/doc/org.janusgraph/janusgraph-core/latest"/>
      <link href="https://tinkerpop.apache.org/javadocs/current/full"/>
      <link href="http://www.beanshell.org/javadoc"/>
      <link href="https://commons.apache.org/proper/commons-cli/apidocs"/>
      <link href="https://cds-astro.github.io/cds-healpix-java/apidocs"/>
      <link href="https://avro.apache.org/docs/1.8.2/api/java"/>
      <link href="https://javadoc.io/doc/org.python/jython-standalone/latest"/>
      <link packages="com.Lomikel.,com.astrolabsoftware." href="https://cern.ch/hrivnac/Activities/Packages/Grapher/JavaDoc"/>
      </groovydoc>
    </target>

  <!-- Post =================================================================-->

  <target name="post"
          depends="jar,doc,dist"
          description="Post documentation and distribution">
    <delete includeEmptyDirs="true">
      <fileset dir="${doc}" includes="**/*"/>
      </delete>
 		<copy todir="${doc}" force="true">
			<fileset dir="../doc" includes="**/*"/>
			<fileset dir="../dist" includes="*.jar"/>
      </copy>
    <copy file="../ant/pomCore.xml"
          tofile="pomCore.xml"/>
    <replace file="pomCore.xml" token="@version@" value="${version}"/>
    <copy file="../ant/pom.xml"
          tofile="pom.xml"/>
    <replace file="pom.xml" token="@version@" value="${version}"/>
    <exec executable="/usr/bin/mvn">
      <arg value="install:install-file"/>
      <arg value="-Dfile=../lib/Grapher-${version}.jar"/>
      <arg value="-DpomFile=pomCore.xml"/>
      </exec>
    <exec executable="/usr/bin/mvn">
      </exec>
    </target>

  <!-- JDepend ==============================================================-->

  <target name="jdepend"
          depends="init"
          description="Analyse dependencies">
    <java classname="jdepend.swingui.JDepend"
          fork="true"
          failonerror="true">
      <arg value="../build"/>
      <classpath>
          <pathelement location="../extlib/jdepend-2.9.5.jar"/>
          </classpath>
      </java>
    </target>

  <!-- j2h ==================================================================-->

  <target name="j2h"
          depends="init"
          description="Construct source documentation">
    <taskdef name="java2html" classname="com.java2html.Java2HTMLTask">
      <classpath>
        <pathelement location="../extlib/j2h.jar"/>
        </classpath>
      </taskdef>
	  <java2html title="Grapher" 
               simple="no"
             	  tabsize="4"
		            marginsize="2"
		            header="true"
		            footer="true"
		            destination="../doc/Src">
		  <fileset dir="../src"   includes="**/*.java"/>
		  <fileset dir="../build" includes="**/*.java"/>
		  <javadoc localRef="${javadoc}" httpRef="http://docs.oracle.com/javase/11/docs/api"/>
	    </java2html>
    </target>

  <!-- Viz ==================================================================-->

  <target name="viz"
          depends="init"
          description="Create flow of build file">
    <taskdef name="vizant" classname="net.sourceforge.vizant.Vizant"> 
      <classpath>
        <pathelement location="../extlib/vizant.jar"/>
        </classpath>
      </taskdef>
    <vizant antfile="../ant/build.xml" outfile="../doc/build.dot"/>
    <exec executable="${dot}">
      <arg line="-T jpg ../doc/build.dot -O"/>
      </exec>       
    </target>

  <!-- Find Bugs ============================================================-->  

  <target name="findbugs"
          depends="exe"
          description="FindBugs Check">
    <property name="findbugs.home"
              value="${findbugs}"/>
    <taskdef name="findbugs"
             classpath="${findbugs.home}/lib/findbugs-ant.jar"
             classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <findbugs home="${findbugs.home}"
              output="text"
              outputFile="../run/FindBugs.out"
              excludeFilter="../ant/FindBugs-ExcludeFilter.xml">
      <auxClasspath>
        <path refid="classpath.run"/>
        </auxClasspath>
      <sourcePath path="../src" />
      <class location="../lib/Grapher-${version}.jar" />
      </findbugs>   
    </target>

  <target name="spotbugs"
          depends="jar"
          description="SpotBugs Check">
    <spotbugs home="${spotbugs}"
              output="html"
              outputFile="Spotbugs.html" >
      <auxClasspath refid="classpath.build"/>
      <sourcePath path="../src/java" />
      <class location="../lib/Grapher-${version}.jar" />
      </spotbugs>
    </target>

  <!-- Clean Imports ========================================================-->  

  <target name="cleanimports"
          description="Clean Unused Imports">
    <exec executable="../src/python/remove-unused-imports.py">
      <arg line="../src/java/com/Grapher"/>
      </exec>
    </target>
 
  <!-- ======================================================================-->

  </project>
